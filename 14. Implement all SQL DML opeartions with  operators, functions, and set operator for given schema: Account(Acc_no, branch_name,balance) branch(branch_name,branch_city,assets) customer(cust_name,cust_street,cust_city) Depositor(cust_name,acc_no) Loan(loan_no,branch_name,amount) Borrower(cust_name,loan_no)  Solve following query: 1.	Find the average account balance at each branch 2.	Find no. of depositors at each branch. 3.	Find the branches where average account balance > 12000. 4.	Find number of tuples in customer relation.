-- Switch or create a database
CREATE DATABASE IF NOT EXISTS bankDB;
USE bankDB;

-- Drop tables if they exist
DROP TABLE IF EXISTS Borrower;
DROP TABLE IF EXISTS Loan;
DROP TABLE IF EXISTS Depositor;
DROP TABLE IF EXISTS Account;
DROP TABLE IF EXISTS Customer;
DROP TABLE IF EXISTS Branch;

-- Create tables
CREATE TABLE Branch (
    branch_name VARCHAR(50) PRIMARY KEY,
    branch_city VARCHAR(50),
    assets INT
);

CREATE TABLE Customer (
    cust_name VARCHAR(50) PRIMARY KEY,
    cust_street VARCHAR(50),
    cust_city VARCHAR(50)
);

CREATE TABLE Account (
    acc_no INT PRIMARY KEY,
    branch_name VARCHAR(50),
    balance INT,
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Depositor (
    cust_name VARCHAR(50),
    acc_no INT,
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (acc_no) REFERENCES Account(acc_no)
);

CREATE TABLE Loan (
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(50),
    amount INT,
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Borrower (
    cust_name VARCHAR(50),
    loan_no INT,
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);

-- Insert sample data
INSERT INTO Branch VALUES 
('Pune', 'Pune', 1000000),
('Mumbai', 'Mumbai', 2000000),
('Delhi', 'Delhi', 1500000);

INSERT INTO Customer VALUES 
('Alice', 'MG Road', 'Pune'),
('Bob', 'Churchgate', 'Mumbai'),
('Charlie', 'Karol Bagh', 'Delhi'),
('David', 'Baner', 'Pune'),
('Eva', 'Andheri', 'Mumbai');

INSERT INTO Account VALUES 
(101, 'Pune', 10000),
(102, 'Pune', 15000),
(103, 'Mumbai', 20000),
(104, 'Delhi', 8000),
(105, 'Mumbai', 25000);

INSERT INTO Depositor VALUES 
('Alice', 101),
('David', 102),
('Bob', 103),
('Eva', 105),
('Charlie', 104);

INSERT INTO Loan VALUES 
(201, 'Pune', 50000),
(202, 'Mumbai', 75000),
(203, 'Delhi', 60000);

INSERT INTO Borrower VALUES 
('Alice', 201),
('Eva', 202),
('Charlie', 203);

-- =====================================
--  1. Find the average account balance at each branch
SELECT branch_name, AVG(balance) AS avg_balance
FROM Account
GROUP BY branch_name;

-- =====================================
--  2. Find number of depositors at each branch
SELECT A.branch_name, COUNT(D.cust_name) AS num_depositors
FROM Account A
JOIN Depositor D ON A.acc_no = D.acc_no
GROUP BY A.branch_name;

-- =====================================
--  3. Find branches where average account balance > 12000
SELECT branch_name
FROM Account
GROUP BY branch_name
HAVING AVG(balance) > 12000;

-- =====================================
-- 4. Find number of tuples in customer relation
SELECT COUNT(*) AS total_customers FROM Customer;
